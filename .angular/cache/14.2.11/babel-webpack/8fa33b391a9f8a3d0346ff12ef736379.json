{"ast":null,"code":"import { ChangeDetectorRef } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport * as moment from 'moment';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid'; // import the TimeGrid plugin\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/services/person-activity.service\";\nimport * as i2 from \"@fullcalendar/angular\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/core\";\nimport * as i8 from \"@angular/material/select\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/material/table\";\nimport * as i11 from \"@angular/forms\";\nfunction AppComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Semaines doit \\u00EAtre compris entre 1 et 52 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_mat_error_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Mois doit \\u00EAtre compris entre 1 et 12 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_mat_option_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r6.Name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r6.Name);\n  }\n}\nfunction AppComponent_mat_table_36_mat_header_cell_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Name\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_mat_table_36_mat_cell_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r12.Name);\n  }\n}\nfunction AppComponent_mat_table_36_ng_container_4_mat_header_cell_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const activity_r13 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(activity_r13.Title);\n  }\n}\nfunction AppComponent_mat_table_36_ng_container_4_mat_cell_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\")(1, \"mat-form-field\");\n    i0.ɵɵelement(2, \"input\", 23);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const user_r17 = ctx.$implicit;\n    const activity_r13 = i0.ɵɵnextContext().$implicit;\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formControl\", ctx_r15.getActivityControl(user_r17, activity_r13.Title));\n  }\n}\nfunction AppComponent_mat_table_36_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 22);\n    i0.ɵɵtemplate(1, AppComponent_mat_table_36_ng_container_4_mat_header_cell_1_Template, 2, 1, \"mat-header-cell\", 17);\n    i0.ɵɵtemplate(2, AppComponent_mat_table_36_ng_container_4_mat_cell_2_Template, 3, 1, \"mat-cell\", 18);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const activity_r13 = ctx.$implicit;\n    i0.ɵɵproperty(\"matColumnDef\", activity_r13.Title);\n  }\n}\nfunction AppComponent_mat_table_36_mat_header_row_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-header-row\");\n  }\n}\nfunction AppComponent_mat_table_36_mat_row_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-row\");\n  }\n}\nfunction AppComponent_mat_table_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-table\", 15);\n    i0.ɵɵelementContainerStart(1, 16);\n    i0.ɵɵtemplate(2, AppComponent_mat_table_36_mat_header_cell_2_Template, 2, 0, \"mat-header-cell\", 17);\n    i0.ɵɵtemplate(3, AppComponent_mat_table_36_mat_cell_3_Template, 2, 1, \"mat-cell\", 18);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵtemplate(4, AppComponent_mat_table_36_ng_container_4_Template, 3, 1, \"ng-container\", 19);\n    i0.ɵɵtemplate(5, AppComponent_mat_table_36_mat_header_row_5_Template, 1, 0, \"mat-header-row\", 20);\n    i0.ɵɵtemplate(6, AppComponent_mat_table_36_mat_row_6_Template, 1, 0, \"mat-row\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"dataSource\", ctx_r3.dataSource);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.activities);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matHeaderRowDef\", ctx_r3.displayedColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matRowDefColumns\", ctx_r3.displayedColumns);\n  }\n}\nfunction AppComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"pre\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"json\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 1, ctx_r4.formGroup.value));\n  }\n}\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(personActivityService, cdr) {\n      this.personActivityService = personActivityService;\n      this.cdr = cdr;\n      this.activities = [{\n        Title: 'infra',\n        Value: 0\n      }, {\n        Title: 'dev',\n        Value: 0\n      }, {\n        Title: 'reseau',\n        Value: 0\n      }];\n      this.calendarPlugins = [dayGridPlugin, timeGridPlugin];\n      this.calendarEvents = [];\n      this.calendarOptions = {\n        plugins: this.calendarPlugins,\n        headerToolbar: {\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay'\n        },\n        weekends: false,\n        selectable: true,\n        selectMirror: true,\n        dayMaxEvents: true,\n        initialView: 'timeGridWeek',\n        events: [] // les événements seront ajoutés dynamiquement\n      };\n\n      this.userData = [];\n      this.persons = [];\n      this.selectedNames = new FormControl([]);\n      this.dataSource = new MatTableDataSource(this.userData);\n      this.firstTimeSelect = null;\n    }\n    ngOnInit() {\n      this.formGroup = new FormGroup({\n        weeks: new FormControl(parseInt(moment().format('w'))),\n        months: new FormControl(parseInt(moment().format('M'))),\n        years: new FormControl(parseInt(moment().format('y')))\n      });\n      this.getActivities();\n      this.getPersons();\n      this.selectedNames.valueChanges.subscribe(selectedNames => {\n        var _a;\n        this.firstTimeSelect = (_a = this.firstTimeSelect) !== null && _a !== void 0 ? _a : true;\n        const filteredUserData = this.userData.filter(user => selectedNames.includes(user.Name));\n        this.dataSource.data = filteredUserData;\n        this.updateForm(selectedNames);\n      });\n      this.formGroup.get('weeks').valueChanges.subscribe(value => {\n        let month = moment().day(\"Monday\").week(value).month();\n        this.formGroup.get('months').setValue(month + 1, {\n          emitEvent: false\n        });\n        this.getUserData();\n      });\n      this.formGroup.get('months').valueChanges.subscribe(value => {\n        let week = moment(value + \"/\" + this.formGroup.get('years').value, \"M/YYYY\").week();\n        this.formGroup.get('weeks').setValue(week, {\n          emitEvent: false\n        });\n        this.getUserData();\n      });\n      this.formGroup.get('years').valueChanges.subscribe(value => {\n        this.getUserData();\n      });\n    }\n    ngAfterViewInit() {}\n    createEvents(persons) {\n      const events = [];\n      persons.forEach(person => {\n        person.PersonActivities.forEach(pa => {\n          const start = moment().year(pa.Year).week(pa.Week).startOf('week').add(person.Id, 'days');\n          const end = moment().year(pa.Year).week(pa.Week).endOf('week').add(person.Id, 'days');\n          const title = `${person.Name}: ${pa.Activity.Title} - ${pa.Value}`;\n          events.push({\n            id: pa.Id.toString(),\n            title: title,\n            start: start.toDate(),\n            end: end.toDate(),\n            backgroundColor: 'red'\n          });\n        });\n      });\n      return events;\n    }\n    getPersons() {\n      this.personActivityService.getPersons().subscribe({\n        next: data => {\n          this.persons = data;\n          this.getUserData();\n        }\n      });\n    }\n    getActivities() {\n      this.personActivityService.getActivities().subscribe({\n        next: data => {\n          this.activities = data;\n        }\n      });\n    }\n    setForm(selectedNames) {\n      this.formGroup.removeControl('persons');\n      const userDataForm = new FormGroup({});\n      this.userData.forEach(user => {\n        if (!selectedNames.includes(user.Name)) {\n          return; // skip this user\n        }\n\n        const userForm = new FormGroup({});\n        user.PersonActivities.forEach(personActivity => {\n          userForm.addControl(personActivity.Activity.Title, new FormControl(personActivity.Value));\n        });\n        userForm.addControl(\"StatusId\", new FormControl(user.StatusId.toString()));\n        userDataForm.addControl(user.Name, userForm);\n      });\n      this.formGroup.addControl('persons', userDataForm);\n      this.dataSource.data = [...this.userData.filter(m => selectedNames.includes(m.Name))];\n      this.cdr.detectChanges();\n    }\n    getUserData() {\n      const activeWeek = this.formGroup.get('weeks').value;\n      const activeYear = this.formGroup.get('years').value;\n      this.personActivityService.getData(activeWeek, activeYear).subscribe({\n        next: data => {\n          this.userData = data;\n          if (this.firstTimeSelect) {\n            this.selectedNames.setValue(data.filter(m => this.selectedNames.value.includes(m.Name)).map(m => m.Name));\n          } else {\n            this.selectedNames.setValue(this.persons.map(m => m.Name));\n          }\n          this.setForm(this.selectedNames.value);\n          const events = this.createEvents(this.userData);\n          this.calendarOptions.events = events;\n        }\n      });\n    }\n    updateForm(selectedNames) {\n      const userDataForm = this.formGroup.get('persons');\n      if (!userDataForm) {\n        return;\n      }\n      Object.keys(userDataForm.controls).forEach(key => {\n        if (!selectedNames.includes(key)) {\n          userDataForm.removeControl(key);\n        }\n      });\n      this.userData.forEach(user => {\n        if (selectedNames.includes(user.Name)) {\n          let userForm = userDataForm.get(user.Name);\n          if (!userForm) {\n            userForm = new FormGroup({});\n            user.PersonActivities.forEach(personActivity => {\n              userForm.addControl(personActivity.Activity.Title, new FormControl(personActivity.Value));\n            });\n            userForm.addControl(\"StatusId\", new FormControl(user.StatusId.toString()));\n            userDataForm.addControl(user.Name, userForm);\n          } else {\n            user.PersonActivities.forEach(personActivity => {\n              const control = userForm.get(personActivity.Activity.Title);\n              control.setValue(personActivity.Value);\n            });\n          }\n        }\n      });\n    }\n    getActivityControl(userData, activityTitle) {\n      var _a;\n      const userDataForm = this.formGroup.get('persons');\n      return (_a = userDataForm.get(userData.Name)) === null || _a === void 0 ? void 0 : _a.get(activityTitle);\n    }\n    nextWeek() {\n      const newWeekValue = this.formGroup.get('weeks').value + 1;\n      if (newWeekValue > 52) {\n        this.formGroup.get('weeks').setValue(1, {\n          emitEvent: false\n        });\n        this.nextYear();\n      } else {\n        this.formGroup.get('weeks').setValue(newWeekValue);\n      }\n    }\n    previousWeek() {\n      const newWeekValue = this.formGroup.get('weeks').value - 1;\n      if (newWeekValue < 1) {\n        this.previousYear();\n        this.formGroup.get('weeks').setValue(52);\n      } else {\n        this.formGroup.get('weeks').setValue(newWeekValue);\n      }\n    }\n    nextMonth() {\n      const newMonthValue = this.formGroup.get('months').value + 1;\n      if (newMonthValue > 12) {\n        this.formGroup.get('months').setValue(1);\n        this.formGroup.get('weeks').setValue(1, {\n          emitEvent: false\n        });\n        this.nextYear();\n      } else {\n        this.formGroup.get('weeks').setValue(moment(newMonthValue + \"/\" + this.formGroup.get('years').value, \"M/YYYY\").week(), {\n          emitEvent: false\n        });\n        this.formGroup.get('months').setValue(newMonthValue);\n      }\n    }\n    previousMonth() {\n      const newMonthValue = this.formGroup.get('months').value - 1;\n      if (newMonthValue < 1) {\n        this.formGroup.get('months').setValue(12);\n        this.formGroup.get('weeks').setValue(52, {\n          emitEvent: false\n        });\n        this.previousYear();\n      } else {\n        this.formGroup.get('weeks').setValue(moment(newMonthValue + \"/\" + this.formGroup.get('years').value, \"M/YYYY\").week(), {\n          emitEvent: false\n        });\n        this.formGroup.get('months').setValue(newMonthValue);\n      }\n    }\n    nextYear() {\n      const newYearValue = this.formGroup.get('years').value + 1;\n      this.formGroup.get('years').setValue(newYearValue);\n    }\n    previousYear() {\n      const newYearValue = this.formGroup.get('years').value - 1;\n      this.formGroup.get('years').setValue(newYearValue);\n    }\n    saveData() {\n      this.personActivityService.saveUserData(this.formGroup).subscribe({\n        next: data => {\n          this.nextWeek();\n        },\n        complete: () => {}\n      });\n    }\n    get displayedColumns() {\n      let displayedColumns = ['name'];\n      this.activities.forEach(activity => {\n        displayedColumns.push(activity.Title);\n      });\n      return displayedColumns;\n    }\n  }\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.PersonActivityService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 42,\n    vars: 8,\n    consts: [[3, \"formGroup\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"weeks\", \"min\", \"1\", \"max\", \"52\"], [\"mat-button\", \"\", \"matPrefix\", \"\", 3, \"click\"], [\"mat-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"months\", \"min\", \"1\", \"max\", \"12\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"years\"], [\"multiple\", \"\", \"placeholder\", \"Select names\", 3, \"formControl\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"dataSource\", 4, \"ngIf\"], [\"type\", \"submit\", 3, \"click\"], [3, \"options\"], [\"calendar\", \"\"], [3, \"value\"], [3, \"dataSource\"], [\"matColumnDef\", \"name\"], [4, \"matHeaderCellDef\"], [4, \"matCellDef\"], [3, \"matColumnDef\", 4, \"ngFor\", \"ngForOf\"], [4, \"matHeaderRowDef\"], [4, \"matRowDef\", \"matRowDefColumns\"], [3, \"matColumnDef\"], [\"matInput\", \"\", \"type\", \"number\", 3, \"formControl\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"mat-form-field\", 1)(2, \"mat-label\");\n        i0.ɵɵtext(3, \"Semaines\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementStart(5, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_5_listener() {\n          return ctx.previousWeek();\n        });\n        i0.ɵɵelementStart(6, \"mat-icon\");\n        i0.ɵɵtext(7, \"keyboard_arrow_left\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_8_listener() {\n          return ctx.saveData();\n        });\n        i0.ɵɵelementStart(9, \"mat-icon\");\n        i0.ɵɵtext(10, \"keyboard_arrow_right\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(11, AppComponent_mat_error_11_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-form-field\", 1)(13, \"mat-label\");\n        i0.ɵɵtext(14, \"Mois\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 6);\n        i0.ɵɵelementStart(16, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_16_listener() {\n          return ctx.previousMonth();\n        });\n        i0.ɵɵelementStart(17, \"mat-icon\");\n        i0.ɵɵtext(18, \"keyboard_arrow_left\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_19_listener() {\n          return ctx.nextMonth();\n        });\n        i0.ɵɵelementStart(20, \"mat-icon\");\n        i0.ɵɵtext(21, \"keyboard_arrow_right\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(22, AppComponent_mat_error_22_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"mat-form-field\", 1)(24, \"mat-label\");\n        i0.ɵɵtext(25, \"Ann\\u00E9es\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 7);\n        i0.ɵɵelementStart(27, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_27_listener() {\n          return ctx.previousYear();\n        });\n        i0.ɵɵelementStart(28, \"mat-icon\");\n        i0.ɵɵtext(29, \"keyboard_arrow_left\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_30_listener() {\n          return ctx.nextYear();\n        });\n        i0.ɵɵelementStart(31, \"mat-icon\");\n        i0.ɵɵtext(32, \"keyboard_arrow_right\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(33, \"mat-form-field\")(34, \"mat-select\", 8);\n        i0.ɵɵtemplate(35, AppComponent_mat_option_35_Template, 2, 2, \"mat-option\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(36, AppComponent_mat_table_36_Template, 7, 4, \"mat-table\", 10);\n        i0.ɵɵtemplate(37, AppComponent_div_37_Template, 4, 3, \"div\", 5);\n        i0.ɵɵelementStart(38, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_38_listener() {\n          return ctx.saveData();\n        });\n        i0.ɵɵtext(39, \"submit\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(40, \"full-calendar\", 12, 13);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", ctx.formGroup.controls[\"weeks\"].hasError(\"min\") || ctx.formGroup.controls[\"weeks\"].hasError(\"max\"));\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", ctx.formGroup.controls[\"months\"].hasError(\"min\") || ctx.formGroup.controls[\"months\"].hasError(\"max\"));\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"formControl\", ctx.selectedNames);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.persons);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedNames.value.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.formGroup.value);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"options\", ctx.calendarOptions);\n      }\n    },\n    dependencies: [i2.FullCalendarComponent, i3.NgForOf, i3.NgIf, i4.MatButton, i5.MatError, i5.MatFormField, i5.MatLabel, i5.MatPrefix, i5.MatSuffix, i6.MatInput, i7.MatOption, i8.MatSelect, i9.MatIcon, i10.MatTable, i10.MatHeaderCellDef, i10.MatHeaderRowDef, i10.MatColumnDef, i10.MatCellDef, i10.MatRowDef, i10.MatHeaderCell, i10.MatCell, i10.MatHeaderRow, i10.MatRow, i11.ɵNgNoValidate, i11.DefaultValueAccessor, i11.NumberValueAccessor, i11.NgControlStatus, i11.NgControlStatusGroup, i11.MinValidator, i11.MaxValidator, i11.FormControlDirective, i11.FormGroupDirective, i11.FormControlName, i3.JsonPipe]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}